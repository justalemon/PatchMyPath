//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PatchMyPath.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PatchMyPath.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Add {
            get {
                object obj = ResourceManager.GetObject("Add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Clear {
            get {
                object obj = ResourceManager.GetObject("Clear", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration file not found, a new one was generated.
        /// </summary>
        internal static string ConfigCreatedLog {
            get {
                return ResourceManager.GetString("ConfigCreatedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We tried to load the configuration file but is invalid.
        ///Do you want to create a new configuration file?
        ///Press No if you want to manually check the file.
        ///
        ///({0}).
        /// </summary>
        internal static string ConfigInvalid {
            get {
                return ResourceManager.GetString("ConfigInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration is invalid, user prevented the creation of a new file.
        /// </summary>
        internal static string ConfigInvalidLog {
            get {
                return ResourceManager.GetString("ConfigInvalidLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Configuration.
        /// </summary>
        internal static string ConfigInvalidTitle {
            get {
                return ResourceManager.GetString("ConfigInvalidTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to load the configuration....
        /// </summary>
        internal static string ConfigLoadingLog {
            get {
                return ResourceManager.GetString("ConfigLoadingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse configuration: {0}.
        /// </summary>
        internal static string ConfigNotParsedLog {
            get {
                return ResourceManager.GetString("ConfigNotParsedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The install has been duplicated successfully!.
        /// </summary>
        internal static string DuplicatorCompleted {
            get {
                return ResourceManager.GetString("DuplicatorCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplication from {0} to {1} completed.
        /// </summary>
        internal static string DuplicatorCompletedLog {
            get {
                return ResourceManager.GetString("DuplicatorCompletedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplication Finished!.
        /// </summary>
        internal static string DuplicatorCompletedTitle {
            get {
                return ResourceManager.GetString("DuplicatorCompletedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} was copied to {1}.
        /// </summary>
        internal static string DuplicatorCopiedLog {
            get {
                return ResourceManager.GetString("DuplicatorCopiedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination {0} does not exists, creating....
        /// </summary>
        internal static string DuplicatorCreatingDirectoryLog {
            get {
                return ResourceManager.GetString("DuplicatorCreatingDirectoryLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game directory {0} was deleted.
        /// </summary>
        internal static string DuplicatorDirectoryDeletedLog {
            get {
                return ResourceManager.GetString("DuplicatorDirectoryDeletedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game file {0} was deleted.
        /// </summary>
        internal static string DuplicatorFileDeletedLog {
            get {
                return ResourceManager.GetString("DuplicatorFileDeletedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File hard link was created from {0} to {1}.
        /// </summary>
        internal static string DuplicatorHardLog {
            get {
                return ResourceManager.GetString("DuplicatorHardLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Destination folder contains files and/or folders.
        ///Existing game files will be removed and replaced with links. Installed modifications will not be touched.
        ///
        ///Do you want to continue?.
        /// </summary>
        internal static string DuplicatorHasFiles {
            get {
                return ResourceManager.GetString("DuplicatorHasFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder {0} contains files, asking user if wants to continue....
        /// </summary>
        internal static string DuplicatorHasFilesLog {
            get {
                return ResourceManager.GetString("DuplicatorHasFilesLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination Contains Files and/or Folders.
        /// </summary>
        internal static string DuplicatorHasFilesTitle {
            get {
                return ResourceManager.GetString("DuplicatorHasFilesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: {0}
        ///The process has been stopped..
        /// </summary>
        internal static string DuplicatorNativeError {
            get {
                return ResourceManager.GetString("DuplicatorNativeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while creating Symbolic/Hard Link.
        /// </summary>
        internal static string DuplicatorNativeErrorTitle {
            get {
                return ResourceManager.GetString("DuplicatorNativeErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no game selected.
        ///Please select the type of game at the top and try again..
        /// </summary>
        internal static string DuplicatorNoGame {
            get {
                return ResourceManager.GetString("DuplicatorNoGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User attempted to use the duplicator, but no game was selected.
        /// </summary>
        internal static string DuplicatorNoGameLog {
            get {
                return ResourceManager.GetString("DuplicatorNoGameLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Game Selected.
        /// </summary>
        internal static string DuplicatorNoGameTitle {
            get {
                return ResourceManager.GetString("DuplicatorNoGameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looks like one of the folders has not been selected.
        ///Please check that there is an Origin and Destination folder selected and try again..
        /// </summary>
        internal static string DuplicatorNoPath {
            get {
                return ResourceManager.GetString("DuplicatorNoPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User attempted to use the duplicator, but one of the folders is not selected.
        /// </summary>
        internal static string DuplicatorNoPathLog {
            get {
                return ResourceManager.GetString("DuplicatorNoPathLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory not Selected.
        /// </summary>
        internal static string DuplicatorNoPathTitle {
            get {
                return ResourceManager.GetString("DuplicatorNoPathTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} does not exists but is marked as optional, skipping....
        /// </summary>
        internal static string DuplicatorOptionalMissingLog {
            get {
                return ResourceManager.GetString("DuplicatorOptionalMissingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Origin folder does not exists!
        ///Please ensure that the selected folder is present and try again..
        /// </summary>
        internal static string DuplicatorOriginMissing {
            get {
                return ResourceManager.GetString("DuplicatorOriginMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder {0} can&apos;t be used for duplication: Does not exists.
        /// </summary>
        internal static string DuplicatorOriginMissingLog {
            get {
                return ResourceManager.GetString("DuplicatorOriginMissingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin Folder is Missing.
        /// </summary>
        internal static string DuplicatorOriginMissingTitle {
            get {
                return ResourceManager.GetString("DuplicatorOriginMissingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} {1} does not exists and is required!
        ///The process has been stopped!.
        /// </summary>
        internal static string DuplicatorRequiredMissing {
            get {
                return ResourceManager.GetString("DuplicatorRequiredMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} does not exists and is required, duplication process stopped.
        /// </summary>
        internal static string DuplicatorRequiredMissingLog {
            get {
                return ResourceManager.GetString("DuplicatorRequiredMissingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find required {0}.
        /// </summary>
        internal static string DuplicatorRequiredMissingTitle {
            get {
                return ResourceManager.GetString("DuplicatorRequiredMissingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User stopped the duplication process.
        /// </summary>
        internal static string DuplicatorStoppedLog {
            get {
                return ResourceManager.GetString("DuplicatorStoppedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} symbolic link was created from {1} to {2}.
        /// </summary>
        internal static string DuplicatorSymbolicLog {
            get {
                return ResourceManager.GetString("DuplicatorSymbolicLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new instance of the Home Form.
        /// </summary>
        internal static string FormCreatingLog {
            get {
                return ResourceManager.GetString("FormCreatingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished initialization of the Home Form.
        /// </summary>
        internal static string FormInitEndLog {
            get {
                return ResourceManager.GetString("FormInitEndLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install {0} was added.
        /// </summary>
        internal static string FormInstallAddedLog {
            get {
                return ResourceManager.GetString("FormInstallAddedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install {0} was removed.
        /// </summary>
        internal static string FormInstallRemovedLog {
            get {
                return ResourceManager.GetString("FormInstallRemovedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching {0}.
        /// </summary>
        internal static string FormLaunchingLog {
            get {
                return ResourceManager.GetString("FormLaunchingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of installs has been refreshed.
        /// </summary>
        internal static string FormRefreshedLog {
            get {
                return ResourceManager.GetString("FormRefreshedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings loaded from Configuration into UI Controls.
        /// </summary>
        internal static string FormSettingsLoadLog {
            get {
                return ResourceManager.GetString("FormSettingsLoadLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grand Theft Auto IV.
        /// </summary>
        internal static string GameGTAIV {
            get {
                return ResourceManager.GetString("GameGTAIV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grand Theft Auto V.
        /// </summary>
        internal static string GameGTAV {
            get {
                return ResourceManager.GetString("GameGTAV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Red Dead Redemption 2.
        /// </summary>
        internal static string GameRDR2 {
            get {
                return ResourceManager.GetString("GameRDR2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game executables could not be found.
        ///Please make sure that the files are present and try again..
        /// </summary>
        internal static string InstallInvalid {
            get {
                return ResourceManager.GetString("InstallInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User attempted to launch {0} but the executables are missing.
        /// </summary>
        internal static string InstallInvalidLog {
            get {
                return ResourceManager.GetString("InstallInvalidLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executables Missing.
        /// </summary>
        internal static string InstallInvalidTitle {
            get {
                return ResourceManager.GetString("InstallInvalidTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No game install could be found on the specified folder.
        ///Please make sure one of the supported games exists on the install folder and try again..
        /// </summary>
        internal static string InstallNoExecutable {
            get {
                return ResourceManager.GetString("InstallNoExecutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User attempted to launch {0} but no game install could be detected.
        /// </summary>
        internal static string InstallNoExecutableLog {
            get {
                return ResourceManager.GetString("InstallNoExecutableLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Game Detected.
        /// </summary>
        internal static string InstallNoExecutableTitle {
            get {
                return ResourceManager.GetString("InstallNoExecutableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game executables have been tampered.
        ///Please make sure that they have not been modified and try again..
        /// </summary>
        internal static string InstallTampered {
            get {
                return ResourceManager.GetString("InstallTampered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User attempted to launch {0} but the executables are tampered.
        /// </summary>
        internal static string InstallTamperedLog {
            get {
                return ResourceManager.GetString("InstallTamperedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executables Tampered.
        /// </summary>
        internal static string InstallTamperedTitle {
            get {
                return ResourceManager.GetString("InstallTamperedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game version is invalid!
        ///Please make sure that the folder contains a copy of RDR2 or GTAV and try again..
        /// </summary>
        internal static string InstallWrongGame {
            get {
                return ResourceManager.GetString("InstallWrongGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game type {0} ({1}) is not valid.
        /// </summary>
        internal static string InstallWrongGameLog {
            get {
                return ResourceManager.GetString("InstallWrongGameLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Game.
        /// </summary>
        internal static string InstallWrongGameTitle {
            get {
                return ResourceManager.GetString("InstallWrongGameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
        ///{\colortbl ;\red0\green0\blue255;}
        ///{\*\generator Riched20 10.0.18362}\viewkind4\uc1 
        ///\pard\sa200\sl276\slmult1\b\f0\fs24\lang9 PatchMyPath\par
        ///\b0\fs20 MIT License\par
        ///Copyright (c) 2017-2020 Hannele Ruiz\par
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software withou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Licenses {
            get {
                return ResourceManager.GetString("Licenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Play {
            get {
                object obj = ResourceManager.GetObject("Play", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Refresh {
            get {
                object obj = ResourceManager.GetObject("Refresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied when trying to move {0}. Restart the application as administrator and try again..
        /// </summary>
        internal static string SettingsAccessDenied {
            get {
                return ResourceManager.GetString("SettingsAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied to folder {0}.
        /// </summary>
        internal static string SettingsAccessDeniedLog {
            get {
                return ResourceManager.GetString("SettingsAccessDeniedLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied.
        /// </summary>
        internal static string SettingsAccessDeniedTitle {
            get {
                return ResourceManager.GetString("SettingsAccessDeniedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SettingsApplications {
            get {
                object obj = ResourceManager.GetObject("SettingsApplications", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid number or is too big to be processed (max value is {1})..
        /// </summary>
        internal static string SettingsInvalidID {
            get {
                return ResourceManager.GetString("SettingsInvalidID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Language Change will take effect the next time the application is started.
        /// </summary>
        internal static string SettingsLanguageChanged {
            get {
                return ResourceManager.GetString("SettingsLanguageChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language Changed.
        /// </summary>
        internal static string SettingsLanguageChangedTitle {
            get {
                return ResourceManager.GetString("SettingsLanguageChangedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We will download up to date File Lists from the project&apos;s GitHub Page.
        ///
        ///Continue?.
        /// </summary>
        internal static string SettingsOtherDownload {
            get {
                return ResourceManager.GetString("SettingsOtherDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Updated File Lists.
        /// </summary>
        internal static string SettingsOtherDownloadTitle {
            get {
                return ResourceManager.GetString("SettingsOtherDownloadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was found at {1}.
        /// </summary>
        internal static string SettingsPathFoundLog {
            get {
                return ResourceManager.GetString("SettingsPathFoundLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We were unable to detect the original location.
        ///Please make sure that the game was installed from RGL, Steam or EGL and try again..
        /// </summary>
        internal static string SettingsPathNotFound {
            get {
                return ResourceManager.GetString("SettingsPathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find location.
        /// </summary>
        internal static string SettingsPathNotFoundTitle {
            get {
                return ResourceManager.GetString("SettingsPathNotFoundTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looks like this is the original game folder.
        ///Do you want to rename it? (To prevent the game from being deleted/overwritten).
        /// </summary>
        internal static string SettingsPathRename {
            get {
                return ResourceManager.GetString("SettingsPathRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is being renamed to {1} for saving.
        /// </summary>
        internal static string SettingsPathRenameLog {
            get {
                return ResourceManager.GetString("SettingsPathRenameLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original Folder Detected.
        /// </summary>
        internal static string SettingsPathRenameTitle {
            get {
                return ResourceManager.GetString("SettingsPathRenameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} location set to {1}.
        /// </summary>
        internal static string SettingsPathSetLog {
            get {
                return ResourceManager.GetString("SettingsPathSetLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found the Vanilla Location on the Uninstall Information!.
        /// </summary>
        internal static string SettingsPathUninstall {
            get {
                return ResourceManager.GetString("SettingsPathUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Location Found.
        /// </summary>
        internal static string SettingsPathUninstallTitle {
            get {
                return ResourceManager.GetString("SettingsPathUninstallTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found the Vanilla Location on the Legacy Rockstar Warehouse Information!.
        /// </summary>
        internal static string SettingsPathWarehouse {
            get {
                return ResourceManager.GetString("SettingsPathWarehouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Location Found.
        /// </summary>
        internal static string SettingsPathWarehouseTitle {
            get {
                return ResourceManager.GetString("SettingsPathWarehouseTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting GTA V from {0} with Steam.
        /// </summary>
        internal static string StartingGTAVSteamLog {
            get {
                return ResourceManager.GetString("StartingGTAVSteamLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting Vanilla GTA V from {0}.
        /// </summary>
        internal static string StartingGTAVVanillaLog {
            get {
                return ResourceManager.GetString("StartingGTAVVanillaLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting GTA V from {0} with the main executable and LauncherBypass.
        /// </summary>
        internal static string StartingLauncherBypassLog {
            get {
                return ResourceManager.GetString("StartingLauncherBypassLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting RDR2 from {0} with Steam.
        /// </summary>
        internal static string StartingRDR2SteamLog {
            get {
                return ResourceManager.GetString("StartingRDR2SteamLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting Vanila RDR2 from {0}.
        /// </summary>
        internal static string StartingRDR2VanillaLog {
            get {
                return ResourceManager.GetString("StartingRDR2VanillaLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting RedHook2 from {0}.
        /// </summary>
        internal static string StartingRedHookLog {
            get {
                return ResourceManager.GetString("StartingRedHookLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting GTA V from {0} with RagePluginHook.
        /// </summary>
        internal static string StartingRPHLog {
            get {
                return ResourceManager.GetString("StartingRPHLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting RDR2 from {0} with ScriptHook.
        /// </summary>
        internal static string StartingScriptHookLog {
            get {
                return ResourceManager.GetString("StartingScriptHookLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has ocurred:
        ///{0}.
        /// </summary>
        internal static string SymbolicLinkError {
            get {
                return ResourceManager.GetString("SymbolicLinkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while creating symbolic link from {0} to {1}: {2}.
        /// </summary>
        internal static string SymbolicLinkErrorLog {
            get {
                return ResourceManager.GetString("SymbolicLinkErrorLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create Symbolic Link.
        /// </summary>
        internal static string SymbolicLinkErrorTitle {
            get {
                return ResourceManager.GetString("SymbolicLinkErrorTitle", resourceCulture);
            }
        }
    }
}
